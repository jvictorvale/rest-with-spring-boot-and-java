name: Continuous Integration and Delivery with Github Actions

on:
  push:
    branches:
    - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Setup Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: maven

    - name: Build Application .jar
      working-directory: ./rest-with-spring-boot-and-java
      run: mvn clean package -DskipTests

    - name: Docker Compose Build
      run: docker compose build

    - name: Tag and Push to Docker Image to Amazon Container Registry - ECR
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:latest ${{ secrets.IMAGE_REPO_URL }}:latest
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:latest ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        
        docker push ${{ secrets.IMAGE_REPO_URL }}:latest
        docker push ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}

    - name: Push to Docker Hub Container Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:latest ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:${{ github.run_id }}
        
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:${{ github.run_id }}
